#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUMBER  1
#define SYMBOL  2
#define HOTKEY  3

#define AS(keycode) &as LS(keycode) keycode

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp ESC>,
                <&kp TAB>;
        };
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        modcp: mod_copy {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_COPY";
            #binding-cells = <0>;
            bindings =
                <&as LS(C) C>,
                <&kp C>;

            mods = <(LGUI | RGUI)>;
        };
    };

    macros {
        macro_phone: macro_phone {
            // 1351

            label = "MACRO_PHONE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N3 &kp N5 &kp N1>;
        };
        macro_email_q: macro_email_q {
            // 2894512440@qq.com

            label = "MACRO_EMAIL_QQ";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N8 &kp N9 &kp N4 &kp N5 &kp N1 &kp N2 &kp N4 &kp N4 &kp N0 &kp AT &kp Q &kp Q &kp DOT &kp C &kp O &kp M>;
        };
        macro_email_g: macro_email_g {
            // 135115

            compatible = "zmk,behavior-macro";
            label = "MACRO_EMAIL_GMAIL";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N3 &kp N5 &kp N1 &kp N1 &kp N5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
&lt 3 ESC  &kp Q      &kp W      &kp E            &kp R      &kp T       &kp Y        &kp U      &kp I     &kp O     &kp P  &lt 2 MINUS
&kp ENTER  &kp A      &kp S      &kp D            &kp F      &kp G       &kp H        &kp J      &kp K     &kp L  &kp SEMI      &kp SQT
 &kp CAPS  &kp Z      &kp X      &kp C            &kp V      &kp B       &kp N        &kp M  &kp COMMA   &kp DOT  &kp FSLH     &kp BSLH
                  &kp LC(C)  &kp LC(V)         &kp BSPC  &kp SPACE  &lt 2 LEFT  &lt 1 RIGHT   &kp LBKT  &kp RBKT
                      &none   &kp LALT  &mt LCTRL LSHFT  &lt 1 DEL    &kp LGUI    &kp EQUAL   &kp LALT     &none
            >;
        };

        number_layer {
            label = "NUMBER";
            bindings = <
  &kp TAB         &kp PLUS     &kp N7          &kp N8    &kp N9  &kp KP_SLASH         &kp F12     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&kp ENTER        &kp MINUS     &kp N4          &kp N5    &kp N6    &kp KP_DOT  &macro_email_q     &kp F4  &kp F5  &kp F6    &none    &none
&kp ENTER  &kp KP_MULTIPLY     &kp N1          &kp N2    &kp N3        &kp N0    &macro_phone     &kp F1  &kp F2  &kp F3    &none    &none
                            &kp LC(C)  &mt LALT LC(V)  &kp BSPC     &kp SPACE        &kp LEFT  &kp RIGHT   &none   &none
                               &trans           &to 0     &to 0        &trans          &kp UP   &kp DOWN   &none   &none
            >;
        };

        symbol_layer {
            label = "SYMBOL";
            bindings = <
&kp C_VOL_UP  &kp C_VOL_DN  &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR  &none     &none    &kp UP      &none  &none  &none
&kp C_BRI_UP  &kp C_BRI_DN  &kp DLLR  &kp PRCNT  &kp CARET  &kp UNDER  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
       &none     &kp GRAVE  &kp EXCL     &kp AT   &kp HASH  &kp EQUAL  &none     &none     &none      &none  &none  &none
                               &none      &none   &kp C_RW   &kp C_FF  &none     &none     &none      &none
                               &none      &none  &kp LSHFT      &none  &none     &none     &none      &none
            >;
        };

        hotkey_layer {
            label = "HOTKEY";
            bindings = <
   &bt BT_SEL 0     &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4    &bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4       &bt BT_CLR
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI    &rgb_ug RGB_HUI    &rgb_ug RGB_EFF  &rgb_ug RGB_TOG  &out OUT_USB  &out OUT_USB  &rgb_ug RGB_BRI    &rgb_ug RGB_SAI    &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD    &rgb_ug RGB_HUD    &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &out OUT_BLE  &out OUT_BLE  &rgb_ug RGB_BRD    &rgb_ug RGB_SAD    &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG
                                  &ext_power EP_TOG  &ext_power EP_TOG            &none         &none         &none            &none  &ext_power EP_TOG  &ext_power EP_TOG
                                              &none              &none            &none         &none         &none            &none              &none              &none
            >;
        };
    };
};
